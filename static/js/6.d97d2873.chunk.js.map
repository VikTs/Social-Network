{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormsControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","CreateField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","classes","dialog","active","id","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","messagesState","dialogsElements","dialogs","map","key","messageElements","messages","mess","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCGrHC,EAAe,SAAC,GAAgD,EAA9CC,MAA+C,IAAD,IAAvCC,KAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,MAAQC,EAAe,EAAfA,SAC7CC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACKC,GAEJC,GAAY,mDAAkBF,GAAlB,OAKZM,EAAW,SAACC,GAAW,IACxBV,EAA8BU,EAA9BV,MAAgBW,GAAcD,EAAvBT,KADgB,YACOS,EADP,mBAE/B,OAAO,kBAACX,EAAiBW,EAAlB,IAA0B,8CAAcC,EAAeX,IAAvD,MAGEY,EAAQ,SAACF,GAAW,IACrBV,EAA8BU,EAA9BV,MAAgBW,GAAcD,EAAvBT,KADa,YACUS,EADV,mBAE5B,OAAO,kBAACX,EAAiBW,EAAlB,IAA0B,2CAAWC,EAAeX,IAApD,MAGEa,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CP,EAA3C,uDAAiD,GAAIQ,EAArD,uDAA0D,GAA1D,OACvB,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EACnCI,SAAUH,EACVC,UAAWA,GACPP,IAJZ,IAIuBQ,K,iCC/B3B,oEAAO,IAAME,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAIEC,EAAmB,SAAAC,GAAS,OAAI,SAAAF,GACzC,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCNlC1B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+ICI9K2B,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAKtB,MAAMiB,OACR,kBAACG,EAAcE,KAAKtB,OADI,kBAAC,IAAD,CAAUuB,GAAI,eAHV,GACXC,IAAMJ,WAStC,OAFqCK,YAAQV,EAARU,CAAoCJ,K,8FCJ9DK,EATI,SAAC1B,GAChB,OACI,yBAAKJ,UAAW+B,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAASN,GAAI,YAAcvB,EAAM8B,IAAK9B,EAAMK,QCAzC0B,EAJC,SAAC/B,GACb,OAAQ,yBAAKJ,UAAW+B,IAAQK,SAAUhC,EAAMgC,U,oCC6B9CnB,EAAYD,YAAiB,KAgB7BqB,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EAdL,SAAClC,GACpB,OACI,0BAAMoC,SAAUpC,EAAMqC,cAClB,6BACI,kBAACC,EAAA,EAAD,CACA/B,UAAWR,IACXU,SAAU,CAACC,IAAUG,GACrBR,KAAK,iBAAiBD,YAAY,wBAEtC,6BAAK,6CAOFmC,EA3CC,SAACvC,GAEb,IAAIgB,EAAQhB,EAAMwC,cAEdC,EAAkBzB,EAAM0B,QAAQC,KAAI,SAAAf,GAAM,OAAK,kBAAC,EAAD,CAAYvB,KAAMuB,EAAOvB,KAAMuC,IAAKhB,EAAOE,GAAIA,GAAIF,EAAOE,QACzGe,EAAkB7B,EAAM8B,SAASH,KAAI,SAAAI,GAAI,OAAK,kBAAC,EAAD,CAASf,QAASe,EAAKf,QAASY,IAAKG,EAAKjB,QAM5F,OACI,yBAAKlC,UAAW+B,IAAQe,SACpB,yBAAK9C,UAAW+B,IAAQqB,cACnBP,GAGL,yBAAK7C,UAAW+B,IAAQmB,UACpB,6BAAMD,GACN,kBAACZ,EAAD,CAAqBG,SAZb,SAACa,GACjBjD,EAAMkD,YAAYD,EAAOE,sB,yBCGlBC,sBACX3B,aAbkB,SAACT,GACpB,MAAO,CACHwB,cAAcxB,EAAMwB,kBAIF,SAACa,GACtB,MAAO,CACHH,YAAa,SAACC,GAAoBE,EAASC,YAAmBH,SAMlEhC,IAFWiC,CAGZb","file":"static/js/6.d97d2873.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2iXrN\",\"error\":\"FormsControls_error__3nN0f\",\"formSummaryError\":\"FormsControls_formSummaryError__1orMD\"};","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\nimport { Field } from 'redux-form'\r\n\r\nconst FormsControl = ({ input, meta: {touched, error}, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {`Error: ${error}`} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormsControl {...props}> <textarea {...restProps} {...input} /> </FormsControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormsControl {...props}> <input {...restProps} {...input} /> </FormsControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props=[], text='') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props} /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3LhvQ\",\"dialogsItems\":\"Dialogs_dialogsItems__34tcQ\",\"active\":\"Dialogs_active__8cqBD\",\"messages\":\"Dialogs_messages__3xZFe\",\"message\":\"Dialogs_message__3MxVf\"};","//HOC - принимает компоненту, делает для неё обертку и возвращает компоненту\r\nimport React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  })\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth){ return <Redirect to={'/login'}/>   }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n      \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (<div className={classes.message}>{props.message}</div>)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Messages/Messages';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesState;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => (<DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />))\r\n    let messageElements = state.messages.map(mess => (<Message message={mess.message} key={mess.id} />))\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messageElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {    \r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field \r\n                component={Textarea}\r\n                validate={[required, maxLength]} \r\n                name='newMessageBody' placeholder='Enter your message' />\r\n            </div>\r\n            <div><button >Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator } from '../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n       messagesState:state.messagesState,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageCreator(newMessageBody));}\r\n    }\r\n}\r\n\r\nexport default compose( //конвеер, перекидывает элемент, снизу вверх\r\n    connect(mapStateToProps,mapDispatchToProps), //возвращает hoc\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}