{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","hoc/withAuthRedirect.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","MyPosts/MyPosts.module.css","MyPosts/Post/Post.module.css","MyPosts/ProfileInfo/ProfileStatusWithHooks.js","MyPosts/ProfileInfo/ProfileInfo.jsx","MyPosts/Post/Post.jsx","MyPosts/MyPosts.jsx","MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormsControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","CreateField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","classes","descriptionBlock","src","photos","large","aboutMe","contacts","facebook","Preloader","Post","item","likesCount","maxLength10","AddNewPostRedux","reduxForm","form","onSubmit","handleSubmit","Field","MyPosts","memo","console","log","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","profileState","dispatch","addNewPost","addPostActionCreator","Profile","content","ProfileContainer","userId","match","params","autorithedUserId","history","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/4.6061f2ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2iXrN\",\"error\":\"FormsControls_error__3nN0f\",\"formSummaryError\":\"FormsControls_formSummaryError__1orMD\"};","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\nimport { Field } from 'redux-form'\r\n\r\nconst FormsControl = ({ input, meta: {touched, error}, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {`Error: ${error}`} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormsControl {...props}> <textarea {...restProps} {...input} /> </FormsControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormsControl {...props}> <input {...restProps} {...input} /> </FormsControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props=[], text='') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props} /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n","//HOC - принимает компоненту, делает для неё обертку и возвращает компоненту\r\nimport React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  })\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth){ return <Redirect to={'/login'}/>   }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n      \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1d2nw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__R41-r\",\"item\":\"Profile_item__3vWEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3_TfU\",\"posts\":\"MyPosts_posts__KUREF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3aqVQ\"};","import React, { useState, useEffect } from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\n\r\n//HOOKS\r\n//1) НЕ использовать в условиях if(...){hook}\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    //useState - задает значение по умолчанию и возвращает массив из 2 элементов:\r\n    //1-е - значение, которое было передано в скобках\r\n    //2-е - ф-я, которая изменяет это значение\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    //useEffect - ф-я, которая вызывается после отрисовки (изменение state, первая отрисовка)\r\n    //Если добавить [], то вызовется только во время первой отрисовки\r\n    //[] - компонент ни от чьего состояния не зависит, поэтому отрисовывается всего один раз\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status] //если меняется props.status, то перерисовываем\r\n    )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => { \r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                <span onDoubleClick={activateEditMode}> {props.status || \"-------\"} </span>\r\n            </div>}\r\n\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    value={status} \r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../components/common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, ...props}) => {\r\n  if(!profile){\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n\r\n        <ProfileStatusWithHooks \r\n        status={status} \r\n        updateUserStatus={updateUserStatus}/>\r\n        \r\n        <p>{profile.aboutMe}</p>\r\n        <p>{'facebook: '+profile.contacts.facebook}</p>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500' />\r\n            {props.name}\r\n            <span> {props.likesCount} likes</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../utils/validators/validators'\r\nimport { Textarea } from '../components/common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name='newPostText'\r\n          validate={[required, maxLength10]}\r\n          placeholder='Post message' />\r\n      </div>\r\n      <button>Add post</button>\r\n      {/* <button>Remove</button> */}\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\n//React.memo - hoc, который проверяет, стоит ли перерисовывать компонент\r\nconst MyPosts = React.memo((props) => {\r\n  console.log('render')\r\n  let postsElements = props.posts.map(p => (<Post name={p.name} likesCount={p.likesCount} />));\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostRedux onSubmit={onAddPost} />\r\n      <div className={classes.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n\r\n\r\n// shouldComponentUpdate(nextProps, nextState) { //нужно ли отрисовать компоненту\r\n//   return nextProps != this.props || nextState != this.state\r\n// }\r\n//PureComponent использовать\r\n\r\n\r\n\r\n// class MyPosts extends React.PureComponent {\r\n//   render() {\r\n//     console.log('render')\r\n//     let postsElements = this.props.posts.map(p => (<Post name={p.name} likesCount={p.likesCount} />));\r\n//     let onAddPost = (values) => {\r\n//       this.props.addPost(values.newPostText);\r\n//     }\r\n\r\n//     return (\r\n//       <div className={classes.postsBlock}>\r\n//         <h3>My posts</h3>\r\n\r\n//         <AddNewPostRedux onSubmit={onAddPost} />\r\n\r\n//         <div className={classes.posts}>\r\n//           {postsElements}\r\n//         </div>\r\n//       </div>\r\n\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../components/redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return { \r\n    posts: state.profileState.posts,\r\n    newPostText: state.profileState.newPostText }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (addNewPost) => {       \r\n      dispatch(addPostActionCreator(addNewPost)); \r\n    },\r\n  }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css'\r\nimport ProfileInfo from '../../MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from '../../MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={classes.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus} />\r\n      <div>\r\n        <MyPostsContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../redux/profile-reducer'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorithedUserId;\r\n      if(!userId){\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n\r\n    this.props.getUserStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.props.profile)\r\n    return (\r\n      <Profile {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profileState.profile,\r\n  status: state.profileState.status,\r\n  autorithedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose( //конвеер, перекидывает элемент, снизу вверх\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}